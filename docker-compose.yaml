version: '3'
x-airflow-common:
  &airflow-common
  build: .
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.session'
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  depends_on:
    - redis
    - postgres
   

services:
  postgres:
    image: postgres:13
    env_file:
      - .env
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5342:5342"
    restart: always

  redis:
    image: redis:latest
    expose:
      - 6379
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - airflow-init
      - redis
      - postgres
       
  airflow-scheduler:
    <<: *airflow-common
    env_file:
      - .env
    command: scheduler
    restart: always
    depends_on:
      - airflow-init
      - redis
      - postgres
    
  airflow-worker:
    <<: *airflow-common
    command: celery worker
    environment:
      <<: *airflow-common-env
    restart: always
    depends_on:
      - airflow-init
      - redis
      - postgres
     
  airflow-triggerer:
    <<: *airflow-common
    command: triggerer
    restart: always
    depends_on:
      - airflow-init
      - redis
      - postgres
   

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - airflow db init &&
        airflow users create
        --role Admin 
        --username airflow
        --password airflow
        --email airflow@airflow.com
        --firstname airflow
        --lastname airflow
    
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
     

volumes:
  postgres-db-volume:
